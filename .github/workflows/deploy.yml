on:
  push:
    branches:
      - main
      - dev

name: 🚀 Deploy Website on Server

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: 🛎️ Checkout
      uses: actions/checkout@v3

    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        
    - name: 🛠️ Run Build Process
      run: |
        npm install
        npm run build
    
    - name: 📂 Sync Files (Production)
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ${{ secrets.FTP_HOST_MAIN }}
        username: ${{ secrets.FTP_USER_MAIN }}
        password: ${{ secrets.FTP_PASS_MAIN }}

    - name: 📂 Sync Files (Development)
      if: github.event_name == 'push' && github.ref == 'refs/heads/dev'
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ${{ secrets.FTP_HOST_DEV }}
        username: ${{ secrets.FTP_USER_DEV }}
        password: ${{ secrets.FTP_PASS_DEV }}

    - name: 👷 Restart Server (Production)
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: |
        sudo apt-get install -y sshpass
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_KEY_MAIN }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.SSH_HOST_MAIN }} >> ~/.ssh/known_hosts
        echo "StrictHostKeyChecking no" >> ~/.ssh/config
        sudo apt-get install -y openssh-client
        sshpass -p "${{ secrets.SSH_PASS_MAIN }}" ssh ${{ secrets.SSH_USER_MAIN }}@${{ secrets.SSH_HOST_MAIN }} "cd ${{ secrets.SSH_TARGET_MAIN }}; pm2 stop all; npm install; pm2 restart all"

    - name: 👷 Restart Server (Development)
      if: github.event_name == 'push' && github.ref == 'refs/heads/dev'
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SSH_HOST_DEV }}
        username: ${{ secrets.SSH_USER_DEV }}
        password: ${{ secrets.SSH_PASS_DEV }}
        script: |
          export NVM_DIR=~/.nvm
          source ~/.nvm/nvm.sh
          npm --help
